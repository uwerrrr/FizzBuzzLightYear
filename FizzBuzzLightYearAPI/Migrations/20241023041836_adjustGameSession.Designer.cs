// <auto-generated />
using System;
using FizzBuzzLightYearAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FizzBuzzLightYearAPI.Migrations
{
    [DbContext(typeof(APIDbContext))]
    [Migration("20241023041836_adjustGameSession")]
    partial class adjustGameSession
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("FizzBuzzLightYearAPI.Models.Game", b =>
                {
                    b.Property<Guid>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("GameId");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            GameId = new Guid("11111111-1111-1111-1111-111111111111"),
                            Author = "Alex",
                            CreatedDate = new DateTime(2024, 10, 23, 4, 18, 35, 544, DateTimeKind.Utc).AddTicks(7400),
                            Name = "FizzBuzz"
                        },
                        new
                        {
                            GameId = new Guid("22222222-2222-2222-2222-222222222222"),
                            Author = "John",
                            CreatedDate = new DateTime(2024, 10, 23, 4, 18, 35, 544, DateTimeKind.Utc).AddTicks(7410),
                            Name = "FooBooLoo"
                        });
                });

            modelBuilder.Entity("FizzBuzzLightYearAPI.Models.GameSession", b =>
                {
                    b.Property<Guid>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("CorrectAnswerNum")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DurationSeconds")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("GameId")
                        .HasColumnType("TEXT");

                    b.Property<int>("IncorrectAnswerNum")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Player")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.HasKey("SessionId");

                    b.HasIndex("GameId");

                    b.ToTable("GameSessions");

                    b.HasData(
                        new
                        {
                            SessionId = new Guid("33333333-3333-3333-3333-333333333333"),
                            CorrectAnswerNum = 3,
                            DurationSeconds = 60,
                            EndTime = new DateTime(2024, 10, 23, 4, 19, 35, 544, DateTimeKind.Utc).AddTicks(7640),
                            GameId = new Guid("11111111-1111-1111-1111-111111111111"),
                            IncorrectAnswerNum = 2,
                            IsActive = false,
                            Player = "TestPlayer",
                            StartTime = new DateTime(2024, 10, 23, 4, 18, 35, 544, DateTimeKind.Utc).AddTicks(7640)
                        });
                });

            modelBuilder.Entity("FizzBuzzLightYearAPI.Models.Question", b =>
                {
                    b.Property<Guid>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ExpectedAnswer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("GeneratedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("IsCorrect")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PlayerAnswer")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SessionId")
                        .HasColumnType("TEXT");

                    b.HasKey("QuestionId");

                    b.HasIndex("SessionId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("FizzBuzzLightYearAPI.Models.Rule", b =>
                {
                    b.Property<Guid>("RuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("DivisibleBy")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("GameId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReplaceWith")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("RuleId");

                    b.HasIndex("GameId");

                    b.ToTable("Rules");

                    b.HasData(
                        new
                        {
                            RuleId = new Guid("86bbbeb4-94a5-4257-8378-b013941359ed"),
                            DivisibleBy = 3,
                            GameId = new Guid("11111111-1111-1111-1111-111111111111"),
                            ReplaceWith = "Fizz"
                        },
                        new
                        {
                            RuleId = new Guid("47e9b0d3-125a-4013-bc2e-d0358ab2f456"),
                            DivisibleBy = 5,
                            GameId = new Guid("11111111-1111-1111-1111-111111111111"),
                            ReplaceWith = "Buzz"
                        },
                        new
                        {
                            RuleId = new Guid("8be2bbf0-c936-4189-9a04-e6d8f399b21b"),
                            DivisibleBy = 8,
                            GameId = new Guid("11111111-1111-1111-1111-111111111111"),
                            ReplaceWith = "Loo"
                        },
                        new
                        {
                            RuleId = new Guid("ecbf213e-0826-4025-9c51-91adc75c1b2e"),
                            DivisibleBy = 7,
                            GameId = new Guid("22222222-2222-2222-2222-222222222222"),
                            ReplaceWith = "Foo"
                        },
                        new
                        {
                            RuleId = new Guid("40f1b84c-3c46-4efd-9b56-512b6925091c"),
                            DivisibleBy = 11,
                            GameId = new Guid("22222222-2222-2222-2222-222222222222"),
                            ReplaceWith = "Boo"
                        },
                        new
                        {
                            RuleId = new Guid("d640f9a5-be4d-4f8f-aa20-191cb181604e"),
                            DivisibleBy = 103,
                            GameId = new Guid("22222222-2222-2222-2222-222222222222"),
                            ReplaceWith = "Loo"
                        });
                });

            modelBuilder.Entity("FizzBuzzLightYearAPI.Models.GameSession", b =>
                {
                    b.HasOne("FizzBuzzLightYearAPI.Models.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("FizzBuzzLightYearAPI.Models.Question", b =>
                {
                    b.HasOne("FizzBuzzLightYearAPI.Models.GameSession", "GameSession")
                        .WithMany("Questions")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameSession");
                });

            modelBuilder.Entity("FizzBuzzLightYearAPI.Models.Rule", b =>
                {
                    b.HasOne("FizzBuzzLightYearAPI.Models.Game", "Game")
                        .WithMany("Rules")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("FizzBuzzLightYearAPI.Models.Game", b =>
                {
                    b.Navigation("Rules");
                });

            modelBuilder.Entity("FizzBuzzLightYearAPI.Models.GameSession", b =>
                {
                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
