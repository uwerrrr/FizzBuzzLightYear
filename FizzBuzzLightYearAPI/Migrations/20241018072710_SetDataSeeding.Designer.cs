// <auto-generated />
using System;
using FizzBuzzLightYearAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FizzBuzzLightYearAPI.Migrations
{
    [DbContext(typeof(APIDbContext))]
    [Migration("20241018072710_SetDataSeeding")]
    partial class SetDataSeeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("FizzBuzzLightYearAPI.Models.Game", b =>
                {
                    b.Property<Guid>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("GameId");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            GameId = new Guid("11111111-1111-1111-1111-111111111111"),
                            Author = "Alex",
                            CreatedDate = new DateTime(2024, 10, 18, 7, 27, 9, 675, DateTimeKind.Utc).AddTicks(7530),
                            Name = "FizzBuzz"
                        },
                        new
                        {
                            GameId = new Guid("22222222-2222-2222-2222-222222222222"),
                            Author = "John",
                            CreatedDate = new DateTime(2024, 10, 18, 7, 27, 9, 675, DateTimeKind.Utc).AddTicks(7540),
                            Name = "FooBooLoo"
                        });
                });

            modelBuilder.Entity("FizzBuzzLightYearAPI.Models.GameSession", b =>
                {
                    b.Property<Guid>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("GameId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Player")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Score")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.HasKey("SessionId");

                    b.HasIndex("GameId");

                    b.ToTable("GameSessions");

                    b.HasData(
                        new
                        {
                            SessionId = new Guid("33333333-3333-3333-3333-333333333333"),
                            EndTime = new DateTime(2024, 10, 18, 7, 28, 9, 675, DateTimeKind.Utc).AddTicks(7790),
                            GameId = new Guid("11111111-1111-1111-1111-111111111111"),
                            Player = "TestPlayer",
                            Score = 0,
                            StartTime = new DateTime(2024, 10, 18, 7, 27, 9, 675, DateTimeKind.Utc).AddTicks(7790)
                        });
                });

            modelBuilder.Entity("FizzBuzzLightYearAPI.Models.Question", b =>
                {
                    b.Property<Guid>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PlayerAnswer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SessionId")
                        .HasColumnType("TEXT");

                    b.HasKey("QuestionId");

                    b.HasIndex("SessionId");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            QuestionId = new Guid("b2f90ae4-f147-4620-a91d-86292c9dd3e5"),
                            IsCorrect = true,
                            Number = 3,
                            PlayerAnswer = "Fizz",
                            SessionId = new Guid("33333333-3333-3333-3333-333333333333")
                        },
                        new
                        {
                            QuestionId = new Guid("3b912e47-4b12-4b2b-86f9-07e5e70eff9d"),
                            IsCorrect = true,
                            Number = 5,
                            PlayerAnswer = "Buzz",
                            SessionId = new Guid("33333333-3333-3333-3333-333333333333")
                        },
                        new
                        {
                            QuestionId = new Guid("2f7dfad5-586d-44be-b53f-c63c3ecaae43"),
                            IsCorrect = false,
                            Number = 8,
                            PlayerAnswer = "Fizz",
                            SessionId = new Guid("33333333-3333-3333-3333-333333333333")
                        },
                        new
                        {
                            QuestionId = new Guid("d8a1ac9e-5eea-4717-8201-abd45269ee87"),
                            IsCorrect = true,
                            Number = 15,
                            PlayerAnswer = "FizzBuzz",
                            SessionId = new Guid("33333333-3333-3333-3333-333333333333")
                        });
                });

            modelBuilder.Entity("FizzBuzzLightYearAPI.Models.Rule", b =>
                {
                    b.Property<Guid>("RuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("DivisibleBy")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("GameId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReplaceWith")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("RuleId");

                    b.HasIndex("GameId");

                    b.ToTable("Rules");

                    b.HasData(
                        new
                        {
                            RuleId = new Guid("5aec4713-344a-4686-81bb-86b06d4d6a4a"),
                            DivisibleBy = 3,
                            GameId = new Guid("11111111-1111-1111-1111-111111111111"),
                            ReplaceWith = "Fizz"
                        },
                        new
                        {
                            RuleId = new Guid("c1f50f16-77b9-4972-9976-8a8676cbcee0"),
                            DivisibleBy = 5,
                            GameId = new Guid("11111111-1111-1111-1111-111111111111"),
                            ReplaceWith = "Buzz"
                        },
                        new
                        {
                            RuleId = new Guid("946b8f35-169e-4386-99da-e4a7ea5f11b9"),
                            DivisibleBy = 8,
                            GameId = new Guid("11111111-1111-1111-1111-111111111111"),
                            ReplaceWith = "Loo"
                        },
                        new
                        {
                            RuleId = new Guid("2f684d1e-76ee-4af9-97e0-3ddfe1155459"),
                            DivisibleBy = 7,
                            GameId = new Guid("22222222-2222-2222-2222-222222222222"),
                            ReplaceWith = "Foo"
                        },
                        new
                        {
                            RuleId = new Guid("fbd02815-9107-4382-992d-d7dc662f60e8"),
                            DivisibleBy = 11,
                            GameId = new Guid("22222222-2222-2222-2222-222222222222"),
                            ReplaceWith = "Boo"
                        },
                        new
                        {
                            RuleId = new Guid("83463eb4-d76b-4c2b-bd6a-ba872340f7a6"),
                            DivisibleBy = 103,
                            GameId = new Guid("22222222-2222-2222-2222-222222222222"),
                            ReplaceWith = "Loo"
                        });
                });

            modelBuilder.Entity("FizzBuzzLightYearAPI.Models.GameSession", b =>
                {
                    b.HasOne("FizzBuzzLightYearAPI.Models.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("FizzBuzzLightYearAPI.Models.Question", b =>
                {
                    b.HasOne("FizzBuzzLightYearAPI.Models.GameSession", "GameSession")
                        .WithMany("Questions")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameSession");
                });

            modelBuilder.Entity("FizzBuzzLightYearAPI.Models.Rule", b =>
                {
                    b.HasOne("FizzBuzzLightYearAPI.Models.Game", "Game")
                        .WithMany("Rules")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("FizzBuzzLightYearAPI.Models.Game", b =>
                {
                    b.Navigation("Rules");
                });

            modelBuilder.Entity("FizzBuzzLightYearAPI.Models.GameSession", b =>
                {
                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
